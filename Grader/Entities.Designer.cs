//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("graderModel", "ВедомостьЗапись_Ведомость", "Ведомость", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Ведомость), "ВедомостьЗапись", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВедомостьЗапись), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ВедомостьПредмет_Ведомость", "Ведомость", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Ведомость), "ВедомостьПредмет", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВедомостьПредмет), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ВедомостьТег_Ведомость", "Ведомость", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Ведомость), "ВедомостьТег", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВедомостьТег), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Оценка_Ведомость", "Ведомость", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Ведомость), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Оценка), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ВедомостьЗапись_Военнослужащий", "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Военнослужащий), "ВедомостьЗапись", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВедомостьЗапись), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ВедомостьПредмет_Предмет", "Предмет", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Предмет), "ВедомостьПредмет", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВедомостьПредмет), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Военнослужащий_Звание", "Звание", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Звание), "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Военнослужащий), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Военнослужащий_Подразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Военнослужащий), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Должность_Военнослужащий", "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Военнослужащий), "Должность", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Должность), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Оценка_Проверяемый", "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Военнослужащий), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Оценка), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Подразделение_Командир", "Военнослужащий", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Grader.Военнослужащий), "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Подразделение), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ВусНаЦикле_Подразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "ВусНаЦикле", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ВусНаЦикле), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Должность_Подразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "Должность", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Должность), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Оценка_Звание", "Звание", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Звание), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Оценка), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Оценка_Подразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Оценка), true)]
[assembly: EdmRelationshipAttribute("graderModel", "Оценка_Предмет", "Предмет", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Предмет), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.Оценка), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "ПодразделениеПодчинение", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ПодразделениеПодчинение), true)]
[assembly: EdmRelationshipAttribute("graderModel", "ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Grader.Подразделение), "ПодразделениеПодчинение", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Grader.ПодразделениеПодчинение), true)]

#endregion

namespace Grader
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Entities, используя строку соединения из раздела "Entities" файла конфигурации приложения.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Entities.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Ведомость> Ведомость
        {
            get
            {
                if ((_Ведомость == null))
                {
                    _Ведомость = base.CreateObjectSet<Ведомость>("Ведомость");
                }
                return _Ведомость;
            }
        }
        private ObjectSet<Ведомость> _Ведомость;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ВедомостьЗапись> ВедомостьЗапись
        {
            get
            {
                if ((_ВедомостьЗапись == null))
                {
                    _ВедомостьЗапись = base.CreateObjectSet<ВедомостьЗапись>("ВедомостьЗапись");
                }
                return _ВедомостьЗапись;
            }
        }
        private ObjectSet<ВедомостьЗапись> _ВедомостьЗапись;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ВедомостьПредмет> ВедомостьПредмет
        {
            get
            {
                if ((_ВедомостьПредмет == null))
                {
                    _ВедомостьПредмет = base.CreateObjectSet<ВедомостьПредмет>("ВедомостьПредмет");
                }
                return _ВедомостьПредмет;
            }
        }
        private ObjectSet<ВедомостьПредмет> _ВедомостьПредмет;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ВедомостьТег> ВедомостьТег
        {
            get
            {
                if ((_ВедомостьТег == null))
                {
                    _ВедомостьТег = base.CreateObjectSet<ВедомостьТег>("ВедомостьТег");
                }
                return _ВедомостьТег;
            }
        }
        private ObjectSet<ВедомостьТег> _ВедомостьТег;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Военнослужащий> Военнослужащий
        {
            get
            {
                if ((_Военнослужащий == null))
                {
                    _Военнослужащий = base.CreateObjectSet<Военнослужащий>("Военнослужащий");
                }
                return _Военнослужащий;
            }
        }
        private ObjectSet<Военнослужащий> _Военнослужащий;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ВусНаЦикле> ВусНаЦикле
        {
            get
            {
                if ((_ВусНаЦикле == null))
                {
                    _ВусНаЦикле = base.CreateObjectSet<ВусНаЦикле>("ВусНаЦикле");
                }
                return _ВусНаЦикле;
            }
        }
        private ObjectSet<ВусНаЦикле> _ВусНаЦикле;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Должность> Должность
        {
            get
            {
                if ((_Должность == null))
                {
                    _Должность = base.CreateObjectSet<Должность>("Должность");
                }
                return _Должность;
            }
        }
        private ObjectSet<Должность> _Должность;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Звание> Звание
        {
            get
            {
                if ((_Звание == null))
                {
                    _Звание = base.CreateObjectSet<Звание>("Звание");
                }
                return _Звание;
            }
        }
        private ObjectSet<Звание> _Звание;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Оценка> Оценка
        {
            get
            {
                if ((_Оценка == null))
                {
                    _Оценка = base.CreateObjectSet<Оценка>("Оценка");
                }
                return _Оценка;
            }
        }
        private ObjectSet<Оценка> _Оценка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Подразделение> Подразделение
        {
            get
            {
                if ((_Подразделение == null))
                {
                    _Подразделение = base.CreateObjectSet<Подразделение>("Подразделение");
                }
                return _Подразделение;
            }
        }
        private ObjectSet<Подразделение> _Подразделение;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ПодразделениеПодчинение> ПодразделениеПодчинение
        {
            get
            {
                if ((_ПодразделениеПодчинение == null))
                {
                    _ПодразделениеПодчинение = base.CreateObjectSet<ПодразделениеПодчинение>("ПодразделениеПодчинение");
                }
                return _ПодразделениеПодчинение;
            }
        }
        private ObjectSet<ПодразделениеПодчинение> _ПодразделениеПодчинение;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Предмет> Предмет
        {
            get
            {
                if ((_Предмет == null))
                {
                    _Предмет = base.CreateObjectSet<Предмет>("Предмет");
                }
                return _Предмет;
            }
        }
        private ObjectSet<Предмет> _Предмет;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ВедомостьДляРаспознавания> ВедомостьДляРаспознавания
        {
            get
            {
                if ((_ВедомостьДляРаспознавания == null))
                {
                    _ВедомостьДляРаспознавания = base.CreateObjectSet<ВедомостьДляРаспознавания>("ВедомостьДляРаспознавания");
                }
                return _ВедомостьДляРаспознавания;
            }
        }
        private ObjectSet<ВедомостьДляРаспознавания> _ВедомостьДляРаспознавания;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Ведомость. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВедомость(Ведомость ведомость)
        {
            base.AddObject("Ведомость", ведомость);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ВедомостьЗапись. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВедомостьЗапись(ВедомостьЗапись ведомостьЗапись)
        {
            base.AddObject("ВедомостьЗапись", ведомостьЗапись);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ВедомостьПредмет. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВедомостьПредмет(ВедомостьПредмет ведомостьПредмет)
        {
            base.AddObject("ВедомостьПредмет", ведомостьПредмет);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ВедомостьТег. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВедомостьТег(ВедомостьТег ведомостьТег)
        {
            base.AddObject("ВедомостьТег", ведомостьТег);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Военнослужащий. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВоеннослужащий(Военнослужащий военнослужащий)
        {
            base.AddObject("Военнослужащий", военнослужащий);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ВусНаЦикле. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВусНаЦикле(ВусНаЦикле вусНаЦикле)
        {
            base.AddObject("ВусНаЦикле", вусНаЦикле);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Должность. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToДолжность(Должность должность)
        {
            base.AddObject("Должность", должность);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Звание. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToЗвание(Звание звание)
        {
            base.AddObject("Звание", звание);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Оценка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОценка(Оценка оценка)
        {
            base.AddObject("Оценка", оценка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Подразделение. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToПодразделение(Подразделение подразделение)
        {
            base.AddObject("Подразделение", подразделение);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ПодразделениеПодчинение. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToПодразделениеПодчинение(ПодразделениеПодчинение подразделениеПодчинение)
        {
            base.AddObject("ПодразделениеПодчинение", подразделениеПодчинение);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Предмет. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToПредмет(Предмет предмет)
        {
            base.AddObject("Предмет", предмет);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ВедомостьДляРаспознавания. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВедомостьДляРаспознавания(ВедомостьДляРаспознавания ведомостьДляРаспознавания)
        {
            base.AddObject("ВедомостьДляРаспознавания", ведомостьДляРаспознавания);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Ведомость")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ведомость : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Ведомость.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="датаЗаполнения">Исходное значение свойства ДатаЗаполнения.</param>
        /// <param name="датаВнесения">Исходное значение свойства ДатаВнесения.</param>
        /// <param name="датаИзменения">Исходное значение свойства ДатаИзменения.</param>
        /// <param name="виртуальная">Исходное значение свойства Виртуальная.</param>
        /// <param name="включена">Исходное значение свойства Включена.</param>
        public static Ведомость CreateВедомость(global::System.Int32 код, global::System.String название, global::System.DateTime датаЗаполнения, global::System.DateTime датаВнесения, global::System.DateTime датаИзменения, global::System.Boolean виртуальная, global::System.Boolean включена)
        {
            Ведомость ведомость = new Ведомость();
            ведомость.Код = код;
            ведомость.Название = название;
            ведомость.ДатаЗаполнения = датаЗаполнения;
            ведомость.ДатаВнесения = датаВнесения;
            ведомость.ДатаИзменения = датаИзменения;
            ведомость.Виртуальная = виртуальная;
            ведомость.Включена = включена;
            return ведомость;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ДатаЗаполнения
        {
            get
            {
                return _ДатаЗаполнения;
            }
            set
            {
                OnДатаЗаполненияChanging(value);
                ReportPropertyChanging("ДатаЗаполнения");
                _ДатаЗаполнения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДатаЗаполнения");
                OnДатаЗаполненияChanged();
            }
        }
        private global::System.DateTime _ДатаЗаполнения;
        partial void OnДатаЗаполненияChanging(global::System.DateTime value);
        partial void OnДатаЗаполненияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ДатаВнесения
        {
            get
            {
                return _ДатаВнесения;
            }
            set
            {
                OnДатаВнесенияChanging(value);
                ReportPropertyChanging("ДатаВнесения");
                _ДатаВнесения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДатаВнесения");
                OnДатаВнесенияChanged();
            }
        }
        private global::System.DateTime _ДатаВнесения;
        partial void OnДатаВнесенияChanging(global::System.DateTime value);
        partial void OnДатаВнесенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ДатаИзменения
        {
            get
            {
                return _ДатаИзменения;
            }
            set
            {
                OnДатаИзмененияChanging(value);
                ReportPropertyChanging("ДатаИзменения");
                _ДатаИзменения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДатаИзменения");
                OnДатаИзмененияChanged();
            }
        }
        private global::System.DateTime _ДатаИзменения;
        partial void OnДатаИзмененияChanging(global::System.DateTime value);
        partial void OnДатаИзмененияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Виртуальная
        {
            get
            {
                return _Виртуальная;
            }
            set
            {
                OnВиртуальнаяChanging(value);
                ReportPropertyChanging("Виртуальная");
                _Виртуальная = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Виртуальная");
                OnВиртуальнаяChanged();
            }
        }
        private global::System.Boolean _Виртуальная;
        partial void OnВиртуальнаяChanging(global::System.Boolean value);
        partial void OnВиртуальнаяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Включена
        {
            get
            {
                return _Включена;
            }
            set
            {
                OnВключенаChanging(value);
                ReportPropertyChanging("Включена");
                _Включена = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Включена");
                OnВключенаChanged();
            }
        }
        private global::System.Boolean _Включена;
        partial void OnВключенаChanging(global::System.Boolean value);
        partial void OnВключенаChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьЗапись_Ведомость", "ВедомостьЗапись")]
        public EntityCollection<ВедомостьЗапись> ВедомостьЗапись
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВедомостьЗапись>("graderModel.ВедомостьЗапись_Ведомость", "ВедомостьЗапись");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВедомостьЗапись>("graderModel.ВедомостьЗапись_Ведомость", "ВедомостьЗапись", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьПредмет_Ведомость", "ВедомостьПредмет")]
        public EntityCollection<ВедомостьПредмет> ВедомостьПредмет
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВедомостьПредмет>("graderModel.ВедомостьПредмет_Ведомость", "ВедомостьПредмет");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВедомостьПредмет>("graderModel.ВедомостьПредмет_Ведомость", "ВедомостьПредмет", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьТег_Ведомость", "ВедомостьТег")]
        public EntityCollection<ВедомостьТег> ВедомостьТег
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВедомостьТег>("graderModel.ВедомостьТег_Ведомость", "ВедомостьТег");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВедомостьТег>("graderModel.ВедомостьТег_Ведомость", "ВедомостьТег", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Ведомость", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("graderModel.Оценка_Ведомость", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("graderModel.Оценка_Ведомость", "Оценка", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ВедомостьДляРаспознавания")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВедомостьДляРаспознавания : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ВедомостьДляРаспознавания.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="датаПечати">Исходное значение свойства ДатаПечати.</param>
        /// <param name="списокВоеннослужащих">Исходное значение свойства СписокВоеннослужащих.</param>
        /// <param name="типВедомости">Исходное значение свойства ТипВедомости.</param>
        public static ВедомостьДляРаспознавания CreateВедомостьДляРаспознавания(global::System.Int32 код, global::System.DateTime датаПечати, global::System.String списокВоеннослужащих, global::System.String типВедомости)
        {
            ВедомостьДляРаспознавания ведомостьДляРаспознавания = new ВедомостьДляРаспознавания();
            ведомостьДляРаспознавания.Код = код;
            ведомостьДляРаспознавания.ДатаПечати = датаПечати;
            ведомостьДляРаспознавания.СписокВоеннослужащих = списокВоеннослужащих;
            ведомостьДляРаспознавания.ТипВедомости = типВедомости;
            return ведомостьДляРаспознавания;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ДатаПечати
        {
            get
            {
                return _ДатаПечати;
            }
            set
            {
                OnДатаПечатиChanging(value);
                ReportPropertyChanging("ДатаПечати");
                _ДатаПечати = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДатаПечати");
                OnДатаПечатиChanged();
            }
        }
        private global::System.DateTime _ДатаПечати;
        partial void OnДатаПечатиChanging(global::System.DateTime value);
        partial void OnДатаПечатиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ДатаВнесения
        {
            get
            {
                return _ДатаВнесения;
            }
            set
            {
                OnДатаВнесенияChanging(value);
                ReportPropertyChanging("ДатаВнесения");
                _ДатаВнесения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДатаВнесения");
                OnДатаВнесенияChanged();
            }
        }
        private Nullable<global::System.DateTime> _ДатаВнесения;
        partial void OnДатаВнесенияChanging(Nullable<global::System.DateTime> value);
        partial void OnДатаВнесенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String СписокВоеннослужащих
        {
            get
            {
                return _СписокВоеннослужащих;
            }
            set
            {
                OnСписокВоеннослужащихChanging(value);
                ReportPropertyChanging("СписокВоеннослужащих");
                _СписокВоеннослужащих = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("СписокВоеннослужащих");
                OnСписокВоеннослужащихChanged();
            }
        }
        private global::System.String _СписокВоеннослужащих;
        partial void OnСписокВоеннослужащихChanging(global::System.String value);
        partial void OnСписокВоеннослужащихChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ТипВедомости
        {
            get
            {
                return _ТипВедомости;
            }
            set
            {
                OnТипВедомостиChanging(value);
                ReportPropertyChanging("ТипВедомости");
                _ТипВедомости = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ТипВедомости");
                OnТипВедомостиChanged();
            }
        }
        private global::System.String _ТипВедомости;
        partial void OnТипВедомостиChanging(global::System.String value);
        partial void OnТипВедомостиChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ВедомостьЗапись")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВедомостьЗапись : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ВедомостьЗапись.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="кодВоеннослужащего">Исходное значение свойства КодВоеннослужащего.</param>
        /// <param name="кодВедомости">Исходное значение свойства КодВедомости.</param>
        /// <param name="порядок">Исходное значение свойства Порядок.</param>
        public static ВедомостьЗапись CreateВедомостьЗапись(global::System.Int32 код, global::System.Int32 кодВоеннослужащего, global::System.Int32 кодВедомости, global::System.Int32 порядок)
        {
            ВедомостьЗапись ведомостьЗапись = new ВедомостьЗапись();
            ведомостьЗапись.Код = код;
            ведомостьЗапись.КодВоеннослужащего = кодВоеннослужащего;
            ведомостьЗапись.КодВедомости = кодВедомости;
            ведомостьЗапись.Порядок = порядок;
            return ведомостьЗапись;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВоеннослужащего
        {
            get
            {
                return _КодВоеннослужащего;
            }
            set
            {
                OnКодВоеннослужащегоChanging(value);
                ReportPropertyChanging("КодВоеннослужащего");
                _КодВоеннослужащего = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВоеннослужащего");
                OnКодВоеннослужащегоChanged();
            }
        }
        private global::System.Int32 _КодВоеннослужащего;
        partial void OnКодВоеннослужащегоChanging(global::System.Int32 value);
        partial void OnКодВоеннослужащегоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВедомости
        {
            get
            {
                return _КодВедомости;
            }
            set
            {
                OnКодВедомостиChanging(value);
                ReportPropertyChanging("КодВедомости");
                _КодВедомости = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВедомости");
                OnКодВедомостиChanged();
            }
        }
        private global::System.Int32 _КодВедомости;
        partial void OnКодВедомостиChanging(global::System.Int32 value);
        partial void OnКодВедомостиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Порядок
        {
            get
            {
                return _Порядок;
            }
            set
            {
                OnПорядокChanging(value);
                ReportPropertyChanging("Порядок");
                _Порядок = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Порядок");
                OnПорядокChanged();
            }
        }
        private global::System.Int32 _Порядок;
        partial void OnПорядокChanging(global::System.Int32 value);
        partial void OnПорядокChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьЗапись_Ведомость", "Ведомость")]
        public Ведомость Ведомость
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьЗапись_Ведомость", "Ведомость").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьЗапись_Ведомость", "Ведомость").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ведомость> ВедомостьReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьЗапись_Ведомость", "Ведомость");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ведомость>("graderModel.ВедомостьЗапись_Ведомость", "Ведомость", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьЗапись_Военнослужащий", "Военнослужащий")]
        public Военнослужащий Военнослужащий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.ВедомостьЗапись_Военнослужащий", "Военнослужащий").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.ВедомостьЗапись_Военнослужащий", "Военнослужащий").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Военнослужащий> ВоеннослужащийReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.ВедомостьЗапись_Военнослужащий", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Военнослужащий>("graderModel.ВедомостьЗапись_Военнослужащий", "Военнослужащий", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ВедомостьПредмет")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВедомостьПредмет : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ВедомостьПредмет.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="кодПредмета">Исходное значение свойства КодПредмета.</param>
        /// <param name="кодВедомости">Исходное значение свойства КодВедомости.</param>
        /// <param name="порядок">Исходное значение свойства Порядок.</param>
        public static ВедомостьПредмет CreateВедомостьПредмет(global::System.Int32 код, global::System.Int32 кодПредмета, global::System.Int32 кодВедомости, global::System.Int32 порядок)
        {
            ВедомостьПредмет ведомостьПредмет = new ВедомостьПредмет();
            ведомостьПредмет.Код = код;
            ведомостьПредмет.КодПредмета = кодПредмета;
            ведомостьПредмет.КодВедомости = кодВедомости;
            ведомостьПредмет.Порядок = порядок;
            return ведомостьПредмет;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПредмета
        {
            get
            {
                return _КодПредмета;
            }
            set
            {
                OnКодПредметаChanging(value);
                ReportPropertyChanging("КодПредмета");
                _КодПредмета = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПредмета");
                OnКодПредметаChanged();
            }
        }
        private global::System.Int32 _КодПредмета;
        partial void OnКодПредметаChanging(global::System.Int32 value);
        partial void OnКодПредметаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВедомости
        {
            get
            {
                return _КодВедомости;
            }
            set
            {
                OnКодВедомостиChanging(value);
                ReportPropertyChanging("КодВедомости");
                _КодВедомости = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВедомости");
                OnКодВедомостиChanged();
            }
        }
        private global::System.Int32 _КодВедомости;
        partial void OnКодВедомостиChanging(global::System.Int32 value);
        partial void OnКодВедомостиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Порядок
        {
            get
            {
                return _Порядок;
            }
            set
            {
                OnПорядокChanging(value);
                ReportPropertyChanging("Порядок");
                _Порядок = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Порядок");
                OnПорядокChanged();
            }
        }
        private global::System.Int32 _Порядок;
        partial void OnПорядокChanging(global::System.Int32 value);
        partial void OnПорядокChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьПредмет_Ведомость", "Ведомость")]
        public Ведомость Ведомость
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьПредмет_Ведомость", "Ведомость").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьПредмет_Ведомость", "Ведомость").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ведомость> ВедомостьReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьПредмет_Ведомость", "Ведомость");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ведомость>("graderModel.ВедомостьПредмет_Ведомость", "Ведомость", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьПредмет_Предмет", "Предмет")]
        public Предмет Предмет
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.ВедомостьПредмет_Предмет", "Предмет").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.ВедомостьПредмет_Предмет", "Предмет").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Предмет> ПредметReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.ВедомостьПредмет_Предмет", "Предмет");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Предмет>("graderModel.ВедомостьПредмет_Предмет", "Предмет", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ВедомостьТег")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВедомостьТег : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ВедомостьТег.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="тег">Исходное значение свойства Тег.</param>
        /// <param name="кодВедомости">Исходное значение свойства КодВедомости.</param>
        public static ВедомостьТег CreateВедомостьТег(global::System.Int32 код, global::System.String тег, global::System.Int32 кодВедомости)
        {
            ВедомостьТег ведомостьТег = new ВедомостьТег();
            ведомостьТег.Код = код;
            ведомостьТег.Тег = тег;
            ведомостьТег.КодВедомости = кодВедомости;
            return ведомостьТег;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Тег
        {
            get
            {
                return _Тег;
            }
            set
            {
                OnТегChanging(value);
                ReportPropertyChanging("Тег");
                _Тег = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Тег");
                OnТегChanged();
            }
        }
        private global::System.String _Тег;
        partial void OnТегChanging(global::System.String value);
        partial void OnТегChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВедомости
        {
            get
            {
                return _КодВедомости;
            }
            set
            {
                OnКодВедомостиChanging(value);
                ReportPropertyChanging("КодВедомости");
                _КодВедомости = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВедомости");
                OnКодВедомостиChanged();
            }
        }
        private global::System.Int32 _КодВедомости;
        partial void OnКодВедомостиChanging(global::System.Int32 value);
        partial void OnКодВедомостиChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьТег_Ведомость", "Ведомость")]
        public Ведомость Ведомость
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьТег_Ведомость", "Ведомость").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьТег_Ведомость", "Ведомость").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ведомость> ВедомостьReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.ВедомостьТег_Ведомость", "Ведомость");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ведомость>("graderModel.ВедомостьТег_Ведомость", "Ведомость", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Военнослужащий")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Военнослужащий : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Военнослужащий.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="фамилия">Исходное значение свойства Фамилия.</param>
        /// <param name="имя">Исходное значение свойства Имя.</param>
        /// <param name="отчество">Исходное значение свойства Отчество.</param>
        /// <param name="кодЗвания">Исходное значение свойства КодЗвания.</param>
        /// <param name="кодПодразделения">Исходное значение свойства КодПодразделения.</param>
        /// <param name="вУС">Исходное значение свойства ВУС.</param>
        /// <param name="типВоеннослужащего">Исходное значение свойства ТипВоеннослужащего.</param>
        /// <param name="убыл">Исходное значение свойства Убыл.</param>
        /// <param name="кМН">Исходное значение свойства КМН.</param>
        /// <param name="sortWeight">Исходное значение свойства sortWeight.</param>
        /// <param name="нетДопускаНаЭкзамен">Исходное значение свойства НетДопускаНаЭкзамен.</param>
        public static Военнослужащий CreateВоеннослужащий(global::System.Int32 код, global::System.String фамилия, global::System.String имя, global::System.String отчество, global::System.Int32 кодЗвания, global::System.Int32 кодПодразделения, global::System.Int32 вУС, global::System.String типВоеннослужащего, global::System.Boolean убыл, global::System.Boolean кМН, global::System.Int32 sortWeight, global::System.Boolean нетДопускаНаЭкзамен)
        {
            Военнослужащий военнослужащий = new Военнослужащий();
            военнослужащий.Код = код;
            военнослужащий.Фамилия = фамилия;
            военнослужащий.Имя = имя;
            военнослужащий.Отчество = отчество;
            военнослужащий.КодЗвания = кодЗвания;
            военнослужащий.КодПодразделения = кодПодразделения;
            военнослужащий.ВУС = вУС;
            военнослужащий.ТипВоеннослужащего = типВоеннослужащего;
            военнослужащий.Убыл = убыл;
            военнослужащий.КМН = кМН;
            военнослужащий.sortWeight = sortWeight;
            военнослужащий.НетДопускаНаЭкзамен = нетДопускаНаЭкзамен;
            return военнослужащий;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Фамилия
        {
            get
            {
                return _Фамилия;
            }
            set
            {
                OnФамилияChanging(value);
                ReportPropertyChanging("Фамилия");
                _Фамилия = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Фамилия");
                OnФамилияChanged();
            }
        }
        private global::System.String _Фамилия;
        partial void OnФамилияChanging(global::System.String value);
        partial void OnФамилияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Отчество
        {
            get
            {
                return _Отчество;
            }
            set
            {
                OnОтчествоChanging(value);
                ReportPropertyChanging("Отчество");
                _Отчество = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Отчество");
                OnОтчествоChanged();
            }
        }
        private global::System.String _Отчество;
        partial void OnОтчествоChanging(global::System.String value);
        partial void OnОтчествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодЗвания
        {
            get
            {
                return _КодЗвания;
            }
            set
            {
                OnКодЗванияChanging(value);
                ReportPropertyChanging("КодЗвания");
                _КодЗвания = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодЗвания");
                OnКодЗванияChanged();
            }
        }
        private global::System.Int32 _КодЗвания;
        partial void OnКодЗванияChanging(global::System.Int32 value);
        partial void OnКодЗванияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПодразделения
        {
            get
            {
                return _КодПодразделения;
            }
            set
            {
                OnКодПодразделенияChanging(value);
                ReportPropertyChanging("КодПодразделения");
                _КодПодразделения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПодразделения");
                OnКодПодразделенияChanged();
            }
        }
        private global::System.Int32 _КодПодразделения;
        partial void OnКодПодразделенияChanging(global::System.Int32 value);
        partial void OnКодПодразделенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВУС
        {
            get
            {
                return _ВУС;
            }
            set
            {
                OnВУСChanging(value);
                ReportPropertyChanging("ВУС");
                _ВУС = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ВУС");
                OnВУСChanged();
            }
        }
        private global::System.Int32 _ВУС;
        partial void OnВУСChanging(global::System.Int32 value);
        partial void OnВУСChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ТипВоеннослужащего
        {
            get
            {
                return _ТипВоеннослужащего;
            }
            set
            {
                OnТипВоеннослужащегоChanging(value);
                ReportPropertyChanging("ТипВоеннослужащего");
                _ТипВоеннослужащего = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ТипВоеннослужащего");
                OnТипВоеннослужащегоChanged();
            }
        }
        private global::System.String _ТипВоеннослужащего;
        partial void OnТипВоеннослужащегоChanging(global::System.String value);
        partial void OnТипВоеннослужащегоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Убыл
        {
            get
            {
                return _Убыл;
            }
            set
            {
                OnУбылChanging(value);
                ReportPropertyChanging("Убыл");
                _Убыл = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Убыл");
                OnУбылChanged();
            }
        }
        private global::System.Boolean _Убыл;
        partial void OnУбылChanging(global::System.Boolean value);
        partial void OnУбылChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean КМН
        {
            get
            {
                return _КМН;
            }
            set
            {
                OnКМНChanging(value);
                ReportPropertyChanging("КМН");
                _КМН = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КМН");
                OnКМНChanged();
            }
        }
        private global::System.Boolean _КМН;
        partial void OnКМНChanging(global::System.Boolean value);
        partial void OnКМНChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sortWeight
        {
            get
            {
                return _sortWeight;
            }
            set
            {
                OnsortWeightChanging(value);
                ReportPropertyChanging("sortWeight");
                _sortWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sortWeight");
                OnsortWeightChanged();
            }
        }
        private global::System.Int32 _sortWeight;
        partial void OnsortWeightChanging(global::System.Int32 value);
        partial void OnsortWeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean НетДопускаНаЭкзамен
        {
            get
            {
                return _НетДопускаНаЭкзамен;
            }
            set
            {
                OnНетДопускаНаЭкзаменChanging(value);
                ReportPropertyChanging("НетДопускаНаЭкзамен");
                _НетДопускаНаЭкзамен = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("НетДопускаНаЭкзамен");
                OnНетДопускаНаЭкзаменChanged();
            }
        }
        private global::System.Boolean _НетДопускаНаЭкзамен;
        partial void OnНетДопускаНаЭкзаменChanging(global::System.Boolean value);
        partial void OnНетДопускаНаЭкзаменChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьЗапись_Военнослужащий", "ВедомостьЗапись")]
        public EntityCollection<ВедомостьЗапись> ВедомостьЗапись
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВедомостьЗапись>("graderModel.ВедомостьЗапись_Военнослужащий", "ВедомостьЗапись");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВедомостьЗапись>("graderModel.ВедомостьЗапись_Военнослужащий", "ВедомостьЗапись", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Военнослужащий_Звание", "Звание")]
        public Звание Звание
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Военнослужащий_Звание", "Звание").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Военнослужащий_Звание", "Звание").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Звание> ЗваниеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Военнослужащий_Звание", "Звание");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Звание>("graderModel.Военнослужащий_Звание", "Звание", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Военнослужащий_Подразделение", "Подразделение")]
        public Подразделение Подразделение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Военнослужащий_Подразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Военнослужащий_Подразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> ПодразделениеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Военнослужащий_Подразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.Военнослужащий_Подразделение", "Подразделение", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Должность_Военнослужащий", "Должность")]
        public EntityCollection<Должность> Должность
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Должность>("graderModel.Должность_Военнослужащий", "Должность");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Должность>("graderModel.Должность_Военнослужащий", "Должность", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Проверяемый", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("graderModel.Оценка_Проверяемый", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("graderModel.Оценка_Проверяемый", "Оценка", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Подразделение_Командир", "Подразделение")]
        public EntityCollection<Подразделение> Подразделение1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Подразделение>("graderModel.Подразделение_Командир", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Подразделение>("graderModel.Подразделение_Командир", "Подразделение", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ВусНаЦикле")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ВусНаЦикле : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ВусНаЦикле.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="кодЦикла">Исходное значение свойства КодЦикла.</param>
        /// <param name="вУС">Исходное значение свойства ВУС.</param>
        public static ВусНаЦикле CreateВусНаЦикле(global::System.Int32 код, global::System.Int32 кодЦикла, global::System.Int32 вУС)
        {
            ВусНаЦикле вусНаЦикле = new ВусНаЦикле();
            вусНаЦикле.Код = код;
            вусНаЦикле.КодЦикла = кодЦикла;
            вусНаЦикле.ВУС = вУС;
            return вусНаЦикле;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодЦикла
        {
            get
            {
                return _КодЦикла;
            }
            set
            {
                OnКодЦиклаChanging(value);
                ReportPropertyChanging("КодЦикла");
                _КодЦикла = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодЦикла");
                OnКодЦиклаChanged();
            }
        }
        private global::System.Int32 _КодЦикла;
        partial void OnКодЦиклаChanging(global::System.Int32 value);
        partial void OnКодЦиклаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВУС
        {
            get
            {
                return _ВУС;
            }
            set
            {
                OnВУСChanging(value);
                ReportPropertyChanging("ВУС");
                _ВУС = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ВУС");
                OnВУСChanged();
            }
        }
        private global::System.Int32 _ВУС;
        partial void OnВУСChanging(global::System.Int32 value);
        partial void OnВУСChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВусНаЦикле_Подразделение", "Подразделение")]
        public Подразделение Подразделение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ВусНаЦикле_Подразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ВусНаЦикле_Подразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> ПодразделениеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ВусНаЦикле_Подразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.ВусНаЦикле_Подразделение", "Подразделение", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Должность")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Должность : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Должность.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="кодПодразделения">Исходное значение свойства КодПодразделения.</param>
        /// <param name="кодВоеннослужащего">Исходное значение свойства КодВоеннослужащего.</param>
        public static Должность CreateДолжность(global::System.Int32 код, global::System.String название, global::System.Int32 кодПодразделения, global::System.Int32 кодВоеннослужащего)
        {
            Должность должность = new Должность();
            должность.Код = код;
            должность.Название = название;
            должность.КодПодразделения = кодПодразделения;
            должность.КодВоеннослужащего = кодВоеннослужащего;
            return должность;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПодразделения
        {
            get
            {
                return _КодПодразделения;
            }
            set
            {
                OnКодПодразделенияChanging(value);
                ReportPropertyChanging("КодПодразделения");
                _КодПодразделения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПодразделения");
                OnКодПодразделенияChanged();
            }
        }
        private global::System.Int32 _КодПодразделения;
        partial void OnКодПодразделенияChanging(global::System.Int32 value);
        partial void OnКодПодразделенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВоеннослужащего
        {
            get
            {
                return _КодВоеннослужащего;
            }
            set
            {
                OnКодВоеннослужащегоChanging(value);
                ReportPropertyChanging("КодВоеннослужащего");
                _КодВоеннослужащего = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВоеннослужащего");
                OnКодВоеннослужащегоChanged();
            }
        }
        private global::System.Int32 _КодВоеннослужащего;
        partial void OnКодВоеннослужащегоChanging(global::System.Int32 value);
        partial void OnКодВоеннослужащегоChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Должность_Военнослужащий", "Военнослужащий")]
        public Военнослужащий Военнослужащий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Должность_Военнослужащий", "Военнослужащий").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Должность_Военнослужащий", "Военнослужащий").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Военнослужащий> ВоеннослужащийReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Должность_Военнослужащий", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Военнослужащий>("graderModel.Должность_Военнослужащий", "Военнослужащий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Должность_Подразделение", "Подразделение")]
        public Подразделение Подразделение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Должность_Подразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Должность_Подразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> ПодразделениеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Должность_Подразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.Должность_Подразделение", "Подразделение", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Звание")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Звание : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Звание.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="order">Исходное значение свойства order.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        public static Звание CreateЗвание(global::System.Int32 код, global::System.Int32 order, global::System.String название)
        {
            Звание звание = new Звание();
            звание.Код = код;
            звание.order = order;
            звание.Название = название;
            return звание;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order
        {
            get
            {
                return _order;
            }
            set
            {
                OnorderChanging(value);
                ReportPropertyChanging("order");
                _order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order");
                OnorderChanged();
            }
        }
        private global::System.Int32 _order;
        partial void OnorderChanging(global::System.Int32 value);
        partial void OnorderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Военнослужащий_Звание", "Военнослужащий")]
        public EntityCollection<Военнослужащий> Военнослужащий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Военнослужащий>("graderModel.Военнослужащий_Звание", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Военнослужащий>("graderModel.Военнослужащий_Звание", "Военнослужащий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Звание", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("graderModel.Оценка_Звание", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("graderModel.Оценка_Звание", "Оценка", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Оценка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Оценка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Оценка.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="кодПроверяемого">Исходное значение свойства КодПроверяемого.</param>
        /// <param name="кодПредмета">Исходное значение свойства КодПредмета.</param>
        /// <param name="этоКомментарий">Исходное значение свойства ЭтоКомментарий.</param>
        /// <param name="значение">Исходное значение свойства Значение.</param>
        /// <param name="текст">Исходное значение свойства Текст.</param>
        /// <param name="кодПодразделения">Исходное значение свойства КодПодразделения.</param>
        /// <param name="вУС">Исходное значение свойства ВУС.</param>
        /// <param name="типВоеннослужащего">Исходное значение свойства ТипВоеннослужащего.</param>
        /// <param name="кодЗвания">Исходное значение свойства КодЗвания.</param>
        /// <param name="кодВедомости">Исходное значение свойства КодВедомости.</param>
        public static Оценка CreateОценка(global::System.Int32 код, global::System.Int32 кодПроверяемого, global::System.Int32 кодПредмета, global::System.Boolean этоКомментарий, global::System.SByte значение, global::System.String текст, global::System.Int32 кодПодразделения, global::System.Int32 вУС, global::System.String типВоеннослужащего, global::System.Int32 кодЗвания, global::System.Int32 кодВедомости)
        {
            Оценка оценка = new Оценка();
            оценка.Код = код;
            оценка.КодПроверяемого = кодПроверяемого;
            оценка.КодПредмета = кодПредмета;
            оценка.ЭтоКомментарий = этоКомментарий;
            оценка.Значение = значение;
            оценка.Текст = текст;
            оценка.КодПодразделения = кодПодразделения;
            оценка.ВУС = вУС;
            оценка.ТипВоеннослужащего = типВоеннослужащего;
            оценка.КодЗвания = кодЗвания;
            оценка.КодВедомости = кодВедомости;
            return оценка;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПроверяемого
        {
            get
            {
                return _КодПроверяемого;
            }
            set
            {
                OnКодПроверяемогоChanging(value);
                ReportPropertyChanging("КодПроверяемого");
                _КодПроверяемого = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПроверяемого");
                OnКодПроверяемогоChanged();
            }
        }
        private global::System.Int32 _КодПроверяемого;
        partial void OnКодПроверяемогоChanging(global::System.Int32 value);
        partial void OnКодПроверяемогоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПредмета
        {
            get
            {
                return _КодПредмета;
            }
            set
            {
                OnКодПредметаChanging(value);
                ReportPropertyChanging("КодПредмета");
                _КодПредмета = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПредмета");
                OnКодПредметаChanged();
            }
        }
        private global::System.Int32 _КодПредмета;
        partial void OnКодПредметаChanging(global::System.Int32 value);
        partial void OnКодПредметаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ЭтоКомментарий
        {
            get
            {
                return _ЭтоКомментарий;
            }
            set
            {
                OnЭтоКомментарийChanging(value);
                ReportPropertyChanging("ЭтоКомментарий");
                _ЭтоКомментарий = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ЭтоКомментарий");
                OnЭтоКомментарийChanged();
            }
        }
        private global::System.Boolean _ЭтоКомментарий;
        partial void OnЭтоКомментарийChanging(global::System.Boolean value);
        partial void OnЭтоКомментарийChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte Значение
        {
            get
            {
                return _Значение;
            }
            set
            {
                OnЗначениеChanging(value);
                ReportPropertyChanging("Значение");
                _Значение = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Значение");
                OnЗначениеChanged();
            }
        }
        private global::System.SByte _Значение;
        partial void OnЗначениеChanging(global::System.SByte value);
        partial void OnЗначениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Текст
        {
            get
            {
                return _Текст;
            }
            set
            {
                OnТекстChanging(value);
                ReportPropertyChanging("Текст");
                _Текст = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Текст");
                OnТекстChanged();
            }
        }
        private global::System.String _Текст;
        partial void OnТекстChanging(global::System.String value);
        partial void OnТекстChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПодразделения
        {
            get
            {
                return _КодПодразделения;
            }
            set
            {
                OnКодПодразделенияChanging(value);
                ReportPropertyChanging("КодПодразделения");
                _КодПодразделения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПодразделения");
                OnКодПодразделенияChanged();
            }
        }
        private global::System.Int32 _КодПодразделения;
        partial void OnКодПодразделенияChanging(global::System.Int32 value);
        partial void OnКодПодразделенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ВУС
        {
            get
            {
                return _ВУС;
            }
            set
            {
                OnВУСChanging(value);
                ReportPropertyChanging("ВУС");
                _ВУС = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ВУС");
                OnВУСChanged();
            }
        }
        private global::System.Int32 _ВУС;
        partial void OnВУСChanging(global::System.Int32 value);
        partial void OnВУСChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ТипВоеннослужащего
        {
            get
            {
                return _ТипВоеннослужащего;
            }
            set
            {
                OnТипВоеннослужащегоChanging(value);
                ReportPropertyChanging("ТипВоеннослужащего");
                _ТипВоеннослужащего = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ТипВоеннослужащего");
                OnТипВоеннослужащегоChanged();
            }
        }
        private global::System.String _ТипВоеннослужащего;
        partial void OnТипВоеннослужащегоChanging(global::System.String value);
        partial void OnТипВоеннослужащегоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодЗвания
        {
            get
            {
                return _КодЗвания;
            }
            set
            {
                OnКодЗванияChanging(value);
                ReportPropertyChanging("КодЗвания");
                _КодЗвания = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодЗвания");
                OnКодЗванияChanged();
            }
        }
        private global::System.Int32 _КодЗвания;
        partial void OnКодЗванияChanging(global::System.Int32 value);
        partial void OnКодЗванияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодВедомости
        {
            get
            {
                return _КодВедомости;
            }
            set
            {
                OnКодВедомостиChanging(value);
                ReportPropertyChanging("КодВедомости");
                _КодВедомости = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодВедомости");
                OnКодВедомостиChanged();
            }
        }
        private global::System.Int32 _КодВедомости;
        partial void OnКодВедомостиChanging(global::System.Int32 value);
        partial void OnКодВедомостиChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Ведомость", "Ведомость")]
        public Ведомость Ведомость
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.Оценка_Ведомость", "Ведомость").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.Оценка_Ведомость", "Ведомость").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ведомость> ВедомостьReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ведомость>("graderModel.Оценка_Ведомость", "Ведомость");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ведомость>("graderModel.Оценка_Ведомость", "Ведомость", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Проверяемый", "Военнослужащий")]
        public Военнослужащий Военнослужащий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Оценка_Проверяемый", "Военнослужащий").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Оценка_Проверяемый", "Военнослужащий").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Военнослужащий> ВоеннослужащийReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Оценка_Проверяемый", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Военнослужащий>("graderModel.Оценка_Проверяемый", "Военнослужащий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Звание", "Звание")]
        public Звание Звание
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Оценка_Звание", "Звание").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Оценка_Звание", "Звание").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Звание> ЗваниеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Звание>("graderModel.Оценка_Звание", "Звание");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Звание>("graderModel.Оценка_Звание", "Звание", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Подразделение", "Подразделение")]
        public Подразделение Подразделение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Оценка_Подразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Оценка_Подразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> ПодразделениеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.Оценка_Подразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.Оценка_Подразделение", "Подразделение", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Предмет", "Предмет")]
        public Предмет Предмет
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.Оценка_Предмет", "Предмет").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.Оценка_Предмет", "Предмет").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Предмет> ПредметReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Предмет>("graderModel.Оценка_Предмет", "Предмет");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Предмет>("graderModel.Оценка_Предмет", "Предмет", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Подразделение")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Подразделение : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Подразделение.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="имя">Исходное значение свойства Имя.</param>
        /// <param name="тип">Исходное значение свойства Тип.</param>
        /// <param name="типОбучения">Исходное значение свойства ТипОбучения.</param>
        /// <param name="актив">Исходное значение свойства Актив.</param>
        /// <param name="имяРодительный">Исходное значение свойства ИмяРодительный.</param>
        /// <param name="имяПредложный">Исходное значение свойства ИмяПредложный.</param>
        /// <param name="имяКраткое">Исходное значение свойства ИмяКраткое.</param>
        /// <param name="подразделениеОхраны">Исходное значение свойства ПодразделениеОхраны.</param>
        public static Подразделение CreateПодразделение(global::System.Int32 код, global::System.String имя, global::System.String тип, global::System.String типОбучения, global::System.Boolean актив, global::System.String имяРодительный, global::System.String имяПредложный, global::System.String имяКраткое, global::System.Boolean подразделениеОхраны)
        {
            Подразделение подразделение = new Подразделение();
            подразделение.Код = код;
            подразделение.Имя = имя;
            подразделение.Тип = тип;
            подразделение.ТипОбучения = типОбучения;
            подразделение.Актив = актив;
            подразделение.ИмяРодительный = имяРодительный;
            подразделение.ИмяПредложный = имяПредложный;
            подразделение.ИмяКраткое = имяКраткое;
            подразделение.ПодразделениеОхраны = подразделениеОхраны;
            return подразделение;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> КодКомандира
        {
            get
            {
                return _КодКомандира;
            }
            set
            {
                OnКодКомандираChanging(value);
                ReportPropertyChanging("КодКомандира");
                _КодКомандира = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодКомандира");
                OnКодКомандираChanged();
            }
        }
        private Nullable<global::System.Int32> _КодКомандира;
        partial void OnКодКомандираChanging(Nullable<global::System.Int32> value);
        partial void OnКодКомандираChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Тип
        {
            get
            {
                return _Тип;
            }
            set
            {
                OnТипChanging(value);
                ReportPropertyChanging("Тип");
                _Тип = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Тип");
                OnТипChanged();
            }
        }
        private global::System.String _Тип;
        partial void OnТипChanging(global::System.String value);
        partial void OnТипChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ТипОбучения
        {
            get
            {
                return _ТипОбучения;
            }
            set
            {
                OnТипОбученияChanging(value);
                ReportPropertyChanging("ТипОбучения");
                _ТипОбучения = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ТипОбучения");
                OnТипОбученияChanged();
            }
        }
        private global::System.String _ТипОбучения;
        partial void OnТипОбученияChanging(global::System.String value);
        partial void OnТипОбученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Актив
        {
            get
            {
                return _Актив;
            }
            set
            {
                OnАктивChanging(value);
                ReportPropertyChanging("Актив");
                _Актив = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Актив");
                OnАктивChanged();
            }
        }
        private global::System.Boolean _Актив;
        partial void OnАктивChanging(global::System.Boolean value);
        partial void OnАктивChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ИмяРодительный
        {
            get
            {
                return _ИмяРодительный;
            }
            set
            {
                OnИмяРодительныйChanging(value);
                ReportPropertyChanging("ИмяРодительный");
                _ИмяРодительный = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ИмяРодительный");
                OnИмяРодительныйChanged();
            }
        }
        private global::System.String _ИмяРодительный;
        partial void OnИмяРодительныйChanging(global::System.String value);
        partial void OnИмяРодительныйChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ИмяПредложный
        {
            get
            {
                return _ИмяПредложный;
            }
            set
            {
                OnИмяПредложныйChanging(value);
                ReportPropertyChanging("ИмяПредложный");
                _ИмяПредложный = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ИмяПредложный");
                OnИмяПредложныйChanged();
            }
        }
        private global::System.String _ИмяПредложный;
        partial void OnИмяПредложныйChanging(global::System.String value);
        partial void OnИмяПредложныйChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ИмяКраткое
        {
            get
            {
                return _ИмяКраткое;
            }
            set
            {
                OnИмяКраткоеChanging(value);
                ReportPropertyChanging("ИмяКраткое");
                _ИмяКраткое = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ИмяКраткое");
                OnИмяКраткоеChanged();
            }
        }
        private global::System.String _ИмяКраткое;
        partial void OnИмяКраткоеChanging(global::System.String value);
        partial void OnИмяКраткоеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ПодразделениеОхраны
        {
            get
            {
                return _ПодразделениеОхраны;
            }
            set
            {
                OnПодразделениеОхраныChanging(value);
                ReportPropertyChanging("ПодразделениеОхраны");
                _ПодразделениеОхраны = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ПодразделениеОхраны");
                OnПодразделениеОхраныChanged();
            }
        }
        private global::System.Boolean _ПодразделениеОхраны;
        partial void OnПодразделениеОхраныChanging(global::System.Boolean value);
        partial void OnПодразделениеОхраныChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Военнослужащий_Подразделение", "Военнослужащий")]
        public EntityCollection<Военнослужащий> Военнослужащий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Военнослужащий>("graderModel.Военнослужащий_Подразделение", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Военнослужащий>("graderModel.Военнослужащий_Подразделение", "Военнослужащий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Подразделение_Командир", "Военнослужащий")]
        public Военнослужащий Военнослужащий1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Подразделение_Командир", "Военнослужащий").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Подразделение_Командир", "Военнослужащий").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Военнослужащий> Военнослужащий1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Военнослужащий>("graderModel.Подразделение_Командир", "Военнослужащий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Военнослужащий>("graderModel.Подразделение_Командир", "Военнослужащий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВусНаЦикле_Подразделение", "ВусНаЦикле")]
        public EntityCollection<ВусНаЦикле> ВусНаЦикле
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВусНаЦикле>("graderModel.ВусНаЦикле_Подразделение", "ВусНаЦикле");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВусНаЦикле>("graderModel.ВусНаЦикле_Подразделение", "ВусНаЦикле", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Должность_Подразделение", "Должность")]
        public EntityCollection<Должность> Должность
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Должность>("graderModel.Должность_Подразделение", "Должность");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Должность>("graderModel.Должность_Подразделение", "Должность", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Подразделение", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("graderModel.Оценка_Подразделение", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("graderModel.Оценка_Подразделение", "Оценка", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ПодразделениеПодчиненение_МладшееПодразделение", "ПодразделениеПодчинение")]
        public EntityCollection<ПодразделениеПодчинение> ПодразделениеПодчинение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ПодразделениеПодчинение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "ПодразделениеПодчинение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ПодразделениеПодчинение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "ПодразделениеПодчинение", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ПодразделениеПодчинение_СтаршееПодразделение", "ПодразделениеПодчинение")]
        public EntityCollection<ПодразделениеПодчинение> ПодразделениеПодчинение1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ПодразделениеПодчинение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "ПодразделениеПодчинение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ПодразделениеПодчинение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "ПодразделениеПодчинение", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="ПодразделениеПодчинение")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ПодразделениеПодчинение : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ПодразделениеПодчинение.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="кодПодразделения">Исходное значение свойства КодПодразделения.</param>
        /// <param name="кодСтаршегоПодразделения">Исходное значение свойства КодСтаршегоПодразделения.</param>
        public static ПодразделениеПодчинение CreateПодразделениеПодчинение(global::System.Int32 код, global::System.Int32 кодПодразделения, global::System.Int32 кодСтаршегоПодразделения)
        {
            ПодразделениеПодчинение подразделениеПодчинение = new ПодразделениеПодчинение();
            подразделениеПодчинение.Код = код;
            подразделениеПодчинение.КодПодразделения = кодПодразделения;
            подразделениеПодчинение.КодСтаршегоПодразделения = кодСтаршегоПодразделения;
            return подразделениеПодчинение;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодПодразделения
        {
            get
            {
                return _КодПодразделения;
            }
            set
            {
                OnКодПодразделенияChanging(value);
                ReportPropertyChanging("КодПодразделения");
                _КодПодразделения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодПодразделения");
                OnКодПодразделенияChanged();
            }
        }
        private global::System.Int32 _КодПодразделения;
        partial void OnКодПодразделенияChanging(global::System.Int32 value);
        partial void OnКодПодразделенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодСтаршегоПодразделения
        {
            get
            {
                return _КодСтаршегоПодразделения;
            }
            set
            {
                OnКодСтаршегоПодразделенияChanging(value);
                ReportPropertyChanging("КодСтаршегоПодразделения");
                _КодСтаршегоПодразделения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодСтаршегоПодразделения");
                OnКодСтаршегоПодразделенияChanged();
            }
        }
        private global::System.Int32 _КодСтаршегоПодразделения;
        partial void OnКодСтаршегоПодразделенияChanging(global::System.Int32 value);
        partial void OnКодСтаршегоПодразделенияChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение")]
        public Подразделение Подразделение
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> ПодразделениеReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.ПодразделениеПодчиненение_МладшееПодразделение", "Подразделение", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение")]
        public Подразделение Подразделение1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Подразделение> Подразделение1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Подразделение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Подразделение>("graderModel.ПодразделениеПодчинение_СтаршееПодразделение", "Подразделение", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="graderModel", Name="Предмет")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Предмет : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Предмет.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="полноеНазвание">Исходное значение свойства ПолноеНазвание.</param>
        /// <param name="названиеДательный">Исходное значение свойства НазваниеДательный.</param>
        /// <param name="дЗД">Исходное значение свойства ДЗД.</param>
        public static Предмет CreateПредмет(global::System.Int32 код, global::System.String название, global::System.String полноеНазвание, global::System.String названиеДательный, global::System.Boolean дЗД)
        {
            Предмет предмет = new Предмет();
            предмет.Код = код;
            предмет.Название = название;
            предмет.ПолноеНазвание = полноеНазвание;
            предмет.НазваниеДательный = названиеДательный;
            предмет.ДЗД = дЗД;
            return предмет;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ПолноеНазвание
        {
            get
            {
                return _ПолноеНазвание;
            }
            set
            {
                OnПолноеНазваниеChanging(value);
                ReportPropertyChanging("ПолноеНазвание");
                _ПолноеНазвание = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ПолноеНазвание");
                OnПолноеНазваниеChanged();
            }
        }
        private global::System.String _ПолноеНазвание;
        partial void OnПолноеНазваниеChanging(global::System.String value);
        partial void OnПолноеНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String НазваниеДательный
        {
            get
            {
                return _НазваниеДательный;
            }
            set
            {
                OnНазваниеДательныйChanging(value);
                ReportPropertyChanging("НазваниеДательный");
                _НазваниеДательный = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("НазваниеДательный");
                OnНазваниеДательныйChanged();
            }
        }
        private global::System.String _НазваниеДательный;
        partial void OnНазваниеДательныйChanging(global::System.String value);
        partial void OnНазваниеДательныйChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ДЗД
        {
            get
            {
                return _ДЗД;
            }
            set
            {
                OnДЗДChanging(value);
                ReportPropertyChanging("ДЗД");
                _ДЗД = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ДЗД");
                OnДЗДChanged();
            }
        }
        private global::System.Boolean _ДЗД;
        partial void OnДЗДChanging(global::System.Boolean value);
        partial void OnДЗДChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "ВедомостьПредмет_Предмет", "ВедомостьПредмет")]
        public EntityCollection<ВедомостьПредмет> ВедомостьПредмет
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ВедомостьПредмет>("graderModel.ВедомостьПредмет_Предмет", "ВедомостьПредмет");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ВедомостьПредмет>("graderModel.ВедомостьПредмет_Предмет", "ВедомостьПредмет", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("graderModel", "Оценка_Предмет", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("graderModel.Оценка_Предмет", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("graderModel.Оценка_Предмет", "Оценка", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
